{
  "_args": [
    [
      {
        "raw": "@microsoft/loader-set-webpack-public-path@~0.1.7",
        "scope": "@microsoft",
        "escapedName": "@microsoft%2floader-set-webpack-public-path",
        "name": "@microsoft/loader-set-webpack-public-path",
        "rawSpec": "~0.1.7",
        "spec": ">=0.1.7 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\sageer\\repository\\node_modules\\@microsoft\\sp-build-core-tasks"
    ]
  ],
  "_from": "@microsoft/loader-set-webpack-public-path@>=0.1.7 <0.2.0",
  "_id": "@microsoft/loader-set-webpack-public-path@0.1.7",
  "_inCache": true,
  "_location": "/@microsoft/loader-set-webpack-public-path",
  "_nodeVersion": "4.3.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/loader-set-webpack-public-path-0.1.7.tgz_1471038023328_0.5696162304375321"
  },
  "_npmUser": {
    "name": "odspnpm",
    "email": "odspnpm@microsoft.com"
  },
  "_npmVersion": "2.15.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@microsoft/loader-set-webpack-public-path@~0.1.7",
    "scope": "@microsoft",
    "escapedName": "@microsoft%2floader-set-webpack-public-path",
    "name": "@microsoft/loader-set-webpack-public-path",
    "rawSpec": "~0.1.7",
    "spec": ">=0.1.7 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@microsoft/sp-build-core-tasks"
  ],
  "_resolved": "https://registry.npmjs.org/@microsoft/loader-set-webpack-public-path/-/loader-set-webpack-public-path-0.1.7.tgz",
  "_shasum": "7a55cdc6c7f03f4e5967293e5ca2c0a69c48c4b2",
  "_shrinkwrap": null,
  "_spec": "@microsoft/loader-set-webpack-public-path@~0.1.7",
  "_where": "C:\\Users\\sageer\\repository\\node_modules\\@microsoft\\sp-build-core-tasks",
  "bugs": {
    "url": "https://github.com/microsoft/loader-set-webpack-public-path/issues"
  },
  "dependencies": {
    "loader-utils": "^0.2.15",
    "lodash": "^4.13.1",
    "uglify-js": "^2.6.4"
  },
  "description": "`npm @microsoft/loader-set-webpack-public-path --save-dev`",
  "devDependencies": {
    "chai": "^3.5.0",
    "gulp": "^3.9.1",
    "mocha": "^3.0.2",
    "node-library-build": "^0.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7a55cdc6c7f03f4e5967293e5ca2c0a69c48c4b2",
    "tarball": "https://registry.npmjs.org/@microsoft/loader-set-webpack-public-path/-/loader-set-webpack-public-path-0.1.7.tgz"
  },
  "gitHead": "08718c97e34023cf52c3cd8c335e93611614bc87",
  "homepage": "https://github.com/microsoft/loader-set-webpack-public-path#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "microsoft",
      "email": "npmjs@microsoft.com"
    },
    {
      "name": "odspnpm",
      "email": "odspnpm@microsoft.com"
    }
  ],
  "name": "@microsoft/loader-set-webpack-public-path",
  "optionalDependencies": {},
  "readme": "# set-webpack-public-path loader for webpack\r\n\r\n## Installation\r\n\r\n`npm @microsoft/loader-set-webpack-public-path --save-dev`\r\n\r\n## Overview\r\n\r\nThis simple loader sets the `__webpack_public_path__` variable to\r\na value specified in the arguments, optionally appended to the SystemJs baseURL\r\nproperty.\r\n\r\n## Usage\r\n\r\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\r\n\r\n``` javascript\r\nrequire(\"@microsoft/loader-set-webpack-public-path!\");\r\n```\r\n\r\n## Options\r\n\r\n### Inline Loader Options\r\n\r\n#### `scriptPath=...`\r\n\r\nSearch through all script URLs on the page and use the last directory of the URL that contains the specified string.\r\n\r\nThis option is exclusive to other options. If it is set, `systemJs`, `publicPath`, and `urlPrefix` will be ignored.\r\n\r\n#### `systemJs`\r\n\r\nUse `System.baseURL` if it is defined. Setting this option inline will override `scriptPath` set by `setOptions({ ... })`.\r\n\r\n#### `publicPath=...`\r\n\r\nUse the specified path as the base public path. If `urlPrefix` is also defined, the public path will\r\nbe the concatenation of the two (i.e. - `__webpack_public_path__ = URL.concat({publicPath} + {urlPrefix}`).\r\nThis option takes precedence over the `systemJs` option.  Setting this option inline will override\r\n`scriptPath` set by `setOptions({ ... })`.\r\n\r\n#### `urlPrefix=...`\r\n\r\nUse the specified string as a URL prefix after the SystemJS path or the `publicPath` option. If neither\r\n`systemJs` nor `publicPath` is defined, this option will not apply and a warning will be emitted.\r\n\r\n### Config, pre-bundle options\r\n\r\nOptions may also be set before webpack is called. This package returns a singleton,\r\nso you can require the package in your `webpack.config.js` and call `setOptions({ ... })`\r\nto set any of the above options. For example:\r\n\r\n``` javascript\r\nvar setWebpackPublicPath = require('@microsoft/loader-set-webpack-public-path');\r\n\r\nsetWebpackPublicPath.setOptions({\r\n  systemJs: true,\r\n  urlPrefix: process.env.BUILD_BUILDNUMBER\r\n});\r\n```\r\n\r\nInline options override options set in the webpack.config.\r\n\r\n## SystemJS Caveat\r\n\r\nWhen modules are loaded with SystemJS (and with the , `scriptLoad: true` meta option) `<script src=\"...\"></script>`\r\ntags are injected onto the page, evaludated and then immediately removed. This causes an issue because they are removed\r\nbefore webpack module code begins to execute, so the `publicPath=...` option won't work for modules loaded with SystemJS.\r\n\r\nTo circumvent this issue, a small bit of code is availble to that will maintain a global register of script paths\r\nthat have been inserted onto the page. This code block should be appended to bundles that are expected to be loaded\r\nwith SystemJS and use the `publicPath=...` option.\r\n\r\n### `getGlobalRegisterCode(bool)`\r\n\r\nThis function returns a block of JavaScript that maintains a global register of script tags. If the optional boolean paramter\r\nis set to `true`, the code is not minified. By default, it is minified.\r\n\r\n### Usage\r\n\r\n``` javascript\r\nvar setWebpackPublicPath = require('@microsoft/loader-set-webpack-public-path');\r\nvar gulpInsert = require('gulp-insert');\r\n\r\ngulp.src('finizlied/webpack/bundle/path')\r\n  .pipe(gulpInsert.append(setWebpackPublicPath.getGlobalRegisterCode(true)))\r\n  .pipe(gulp.dest('dest/path'));\r\n```\r\n\r\n## License\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/microsoft/loader-set-webpack-public-path.git"
  },
  "scripts": {},
  "typings": "lib/index.d.ts",
  "version": "0.1.7"
}
